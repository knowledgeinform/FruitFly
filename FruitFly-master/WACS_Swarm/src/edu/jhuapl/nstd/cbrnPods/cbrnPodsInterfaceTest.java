/*
 * BioPodsInterfaceTest.java
 *
 * Created on January 18, 2010, 2:55 PM
 */

package edu.jhuapl.nstd.cbrnPods;

import java.net.UnknownHostException;

import javax.swing.JOptionPane;
import javax.swing.UIManager;

import edu.jhuapl.nstd.cbrnPods.TestPanels.AnacondaPanel;
import edu.jhuapl.nstd.cbrnPods.TestPanels.AnacondaSpectraPanel;
import edu.jhuapl.nstd.cbrnPods.TestPanels.BladewerxPanel;
import edu.jhuapl.nstd.cbrnPods.TestPanels.BridgeportEthernetPanel;
import edu.jhuapl.nstd.cbrnPods.TestPanels.BridgeportUsbPanel;
import edu.jhuapl.nstd.cbrnPods.TestPanels.C100Panel;
import edu.jhuapl.nstd.cbrnPods.TestPanels.CanberraGammaPanel;
import edu.jhuapl.nstd.cbrnPods.TestPanels.IbacPanel;
import edu.jhuapl.nstd.cbrnPods.TestPanels.PodPanel;
import edu.jhuapl.nstd.cbrnPods.TestPanels.THControlPanel;
import edu.jhuapl.nstd.swarm.belief.BeliefManager;
import edu.jhuapl.nstd.swarm.util.Config;


/**
 * Test interface for cbrnPodsInterface
 *
 * @author  humphjc1
 */
public class cbrnPodsInterfaceTest extends javax.swing.JFrame
{

    /**
     * Interface to test
     */
    cbrnPodsInterface m_Pods;

    /**
     * Belief Manager from Swarm, can be null
     */
    BeliefManager beliefManager;

    
    /**
     * Create new test application
     * @param belMgr Belief Manager from Swarm, can be null
     */
    public cbrnPodsInterfaceTest(BeliefManager belMgr) {
        initComponents();
        beliefManager = belMgr;

        createInterface(true);
    }


    /**
     * Create new test application
     * @param belMgr Belief Manager from Swarm, can be null
     */
    public cbrnPodsInterfaceTest(BeliefManager belMgr, boolean createPanels) {
        initComponents();
        beliefManager = belMgr;

        createInterface(createPanels);
    }

    /**
     * Create interface
     */
    public final void createInterface(boolean createPanels)
    {
        //Connect interface
        m_Pods = new cbrnPodsInterface(beliefManager);

        if (createPanels)
        {
            //Display test panels for each sensor.
            jTabbedPane1.add("Pods", new PodPanel(m_Pods, beliefManager));
            jTabbedPane1.add("IBAC", new IbacPanel(m_Pods));
            jTabbedPane1.add("C100", new C100Panel(m_Pods));
            
            if (Config.getConfig().getPropertyAsBoolean("cbrnPodsInterfaceTest.useBridgeportUsbInterface", false))
	        {
            	jTabbedPane1.add("Bridgeport", new BridgeportUsbPanel (m_Pods, beliefManager));
	        }
            else
            {
            	jTabbedPane1.add("Bridgeport", new BridgeportEthernetPanel (m_Pods, beliefManager));
            }
            
            jTabbedPane1.add("Canberra", new CanberraGammaPanel(m_Pods));
            jTabbedPane1.add("TH Control", new THControlPanel (m_Pods));
            jTabbedPane1.add("Bladewerx", new BladewerxPanel(m_Pods, beliefManager));
            //jTabbedPane1.add("Bladewerx Pump", new BladewerxPumpPanel(m_Pods));
            jTabbedPane1.add("Anaconda", new AnacondaPanel(m_Pods));
            jTabbedPane1.add("Anaconda Spectra", new AnacondaSpectraPanel(m_Pods));
        }
    }

    /**
     * Accessor for the cbrnPodsInterface
     *
     * @return cbrnPodsInterface object
     */
    public cbrnPodsInterface shareInterface ()
    {
        return m_Pods;
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("BioPod Interface Tester");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeGracefully(evt);
            }
        });

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1105, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 762, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void closeGracefully(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeGracefully
// TODO add your handling code here:
    exitGracefully();
}//GEN-LAST:event_closeGracefully

private void exitGracefully ()
{
    int opt = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
    
    if (opt == JOptionPane.NO_OPTION)
        return;
    
    m_Pods.shutdown();
    this.dispose();
    System.exit(0);
}

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) throws UnknownHostException {
        
        try
        {
	    // Set System L&F
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch (Exception e)
        {
           e.printStackTrace();
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            @Override
            public void run() {
                new cbrnPodsInterfaceTest(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

}
