/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package edu.jhuapl.nstd.swarm.kml;

import java.awt.Color;
import java.io.BufferedOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author humphjc1
 */
public class KMLWriter
{
    String outputFilename;
    String kmlName;
    String kmlDescription;

    String tab0 = "";
    String tab1 = "  ";
    String tab2 = "    ";
    String tab3 = "      ";
    String tab4 = "        ";
    String tab5 = "          ";
    String tab6 = "            ";
    String tab7 = "              ";
    String tab8 = "                ";

    public static String redPolyStyle = "redPolygon";
    public static String redColor = "ff0000ff";
    public static String bluePolyStyle = "bluePolygon";
    public static String blueColor = "ffffbf00";
    public static String yellowPolyStyle = "yellowPolygon";
    public static String yellowColor = "ff00ffff";
    public static String brownPolyStyle = "brownPolygon";
    public static String brownColor = "ff004488";
    public static String greenPolyStyle = "greenPolygon";
    public static String greenColor = "ff008600";
    public static String pathStyle = "pathStyle";
    public static String pathLineWidth = "2";
    public static String whiteColor = "ffffffff";
    public static String pinkColor = "ffdbcbff";
    public static String blackPolyStyle = "blackPolygon";
    public static String blackColor = "ff000000";

    String documentTag = tab1 + "<Document>";
    String documentEndTag = tab1 + "</Document>";

    double _baseLat;
    double _baseLon;
    double _baseAltitude = 0;
    double _baseRange = 7256;
    double _baseTilt = 60;
    double _baseHeading = 0;
    //double boxSizeLat = 0.00032;
    double boxSizeLat = 0.00008;
    //double boxSizeLon = 0.00042;
    double boxSizeLon = 0.000105;
    //double boxSizeFt = 6;
    double boxSizeFt = 30;
    double boxSizeFlat = 0;


    DataOutputStream output;
    String transSphereFileName;
    String transSphereFolderName;
    boolean transSphereFileWritten;


    public KMLWriter (String filename, String name, String description, double baseLat, double baseLon)
    {
        initializeWriter (filename, name, description, baseLat, baseLon, _baseAltitude, _baseRange, _baseTilt, _baseHeading);
    }

    public KMLWriter (String filename, String name, String description, double baseLat, double baseLon, double baseAlt, double baseRange, double baseTilt, double baseHeading)
    {
        initializeWriter (filename, name, description, baseLat, baseLon, baseAlt, baseRange, baseTilt, baseHeading);
    }

    private void initializeWriter (String filename, String name, String description, double baseLat, double baseLon, double baseAlt, double baseRange, double baseTilt, double baseHeading)
    {
        _baseLat = baseLat;
        _baseLon = baseLon;
        _baseAltitude = baseAlt;
        _baseRange = baseRange;
        _baseTilt = baseTilt;
        _baseHeading = baseHeading;

        outputFilename = filename;
        kmlName = name;
        kmlDescription = description;
        transSphereFileWritten = false;

        try
        {
            File newFile = new File (outputFilename);
            if (!newFile.exists())
                newFile.createNewFile();
            
            output = new DataOutputStream(new BufferedOutputStream (new FileOutputStream (new File (outputFilename)), 10000));

            writeHeader();
            writeFolder();
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }

    public void close() throws IOException
    {
        endFolder();
        endHeader();
        output.flush();
        output.close();
    }

    private void writeHeader () throws IOException
    {
        output.writeBytes("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n");
        output.writeBytes("<kml xmlns=\"http://earth.google.com/kml/2.2\">\r\n");
        output.writeBytes(documentTag + "\r\n");
        writeName (tab2, kmlName);
        writeOpen (tab2, false);
        writeDescription (tab2, kmlDescription);

        writeLookAt (_baseLat, _baseLon, _baseAltitude, _baseRange, _baseTilt, _baseHeading);

        writePolyStyle (redPolyStyle, redColor);
        writePolyStyle (bluePolyStyle, blueColor);
        writePolyStyle (yellowPolyStyle, yellowColor);
        writePolyStyle (brownPolyStyle, brownColor);
        writePolyStyle (greenPolyStyle, greenColor);
        writePolyStyle (blackPolyStyle, blackColor);
        writeLineStyle (pathStyle, pinkColor, pathLineWidth);
    }

    private void endHeader () throws IOException
    {
        output.writeBytes(documentEndTag + "\r\n");
        output.writeBytes("</kml>\r\n");
    }

    private void writeOpen (String tabs, boolean open) throws IOException
    {
        if (open)
            output.writeBytes(tabs + "<open>1</open>\r\n");
        else
            output.writeBytes(tabs + "<open>0</open>\r\n");
    }

    private void writeFolder () throws IOException
    {
        output.writeBytes (tab2 + "<Folder>\r\n");
        writeName(tab3, "UAV Positions");
        writeOpen(tab3, false);
        writeDescription(tab3, "UAV Positions from file");
        writeLookAt (_baseLat, _baseLon, _baseAltitude, _baseRange, _baseTilt, _baseHeading);
        writeHideChildren ();
    }
    
    public void writeEtdFolder () throws IOException
    {
        output.writeBytes (tab2 + "<Folder>\r\n");
        writeName(tab3, "ETD Detections");
        writeOpen(tab3, false);
        writeDescription(tab3, "ETD Detections from file");
        writeLookAt(_baseLat, _baseLon, _baseAltitude, _baseRange, _baseTilt, _baseHeading);
        writeHideChildren();
    }

    public void endFolder () throws IOException
    {
        output.writeBytes (tab2 + "</Folder>\r\n");
    }

    private void writeName (String tabs, String name) throws IOException
    {
        output.writeBytes(tabs + "<name>" + name + "</name>\r\n");
    }

    private void writeDescription (String tabs, String description) throws IOException
    {
        output.writeBytes(tabs + "<description>" + description + "</description>\r\n");
    }

    private void writeLookAt (double lat, double lon, double altitude, double range, double tilt, double heading) throws IOException
    {
        output.writeBytes (tab2 + "<LookAt>\r\n");
        output.writeBytes (tab3 + "<longitude>" + lon + "</longitude>\r\n");
        output.writeBytes (tab3 + "<latitude>" + lat + "</latitude>\r\n");
        output.writeBytes (tab3 + "<altitude>" + altitude + "</altitude>\r\n");
        output.writeBytes (tab3 + "<range>" + range + "</range>\r\n");
        output.writeBytes (tab3 + "<tilt>" + tilt + "</tilt>\r\n");
        output.writeBytes (tab3 + "<heading>" + heading + "</heading>\r\n");
        output.writeBytes (tab2 + "</LookAt>\r\n");
    }

    public void writePolyStyle (String id, String color) throws IOException
    {
        output.writeBytes (tab2 + "<Style id=\"" + id + "\">\r\n");
        output.writeBytes (tab3 + "<PolyStyle>\r\n");
        output.writeBytes (tab4 + "<color>" + color + "</color>\r\n");
        output.writeBytes (tab4 + "<colorMode>normal</colorMode>\r\n");
        output.writeBytes (tab4 + "<fill>1</fill>\r\n");
        output.writeBytes (tab4 + "<outline>0</outline>\r\n");
        output.writeBytes (tab3 + "</PolyStyle>\r\n");
        output.writeBytes (tab2 + "</Style>\r\n");
    }

    private void writeLineStyle (String id, String color, String width) throws IOException
    {
        output.writeBytes (tab2 + "<Style id=\"" + id + "\">\r\n");
        output.writeBytes (tab3 + "<LineStyle>\r\n");
        output.writeBytes (tab4 + "<color>" + color + "</color>\r\n");
        output.writeBytes (tab4 + "<width>" + width + "</width>\r\n");
        output.writeBytes (tab4 + "<colorMode>normal</colorMode>\r\n");
        output.writeBytes (tab3 + "</LineStyle>\r\n");
        output.writeBytes (tab2 + "</Style>\r\n");
    }

    private void writeHideChildren () throws IOException
    {
        output.writeBytes (tab3 + "<Style>\r\n");
        output.writeBytes (tab4 + "<ListStyle>\r\n");
        output.writeBytes (tab5 + "<listItemType>checkHideChildren</listItemType>\r\n");
        output.writeBytes (tab4 + "</ListStyle>\r\n");
        output.writeBytes (tab3 + "</Style>\r\n");
    }

    public void writeTransparentSphere (long startTimeMillis, long endTimeMillis, double lat, double lon, double alt, double ewWidthM, double nsWidthM, double heightM, double bearingDegCW, double transparencyPercent, Color sphereColor, String name, String description) throws IOException
    {
        if (!transSphereFileWritten)
        {
            //transSphereFolderName = outputFilename.substring(0, outputFilename.lastIndexOf("\\")) + "\\files";
            transSphereFolderName = "files";
            transSphereFileName = transSphereFolderName + "\\1m diam sphere.dae";
            writeTransSphereFile (transSphereFolderName, transSphereFileName, sphereColor, transparencyPercent);
            transSphereFileWritten = true;
        }

        DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
        //String startTime = formatter.format(new Date(startTimeMillis)) + "Z";
        String startTime = formatter.format(new Date(startTimeMillis)) + "-04:00";
        //String endTime = formatter.format(new Date(endTimeMillis)) + "Z";
        String endTime = formatter.format(new Date(endTimeMillis)) + "-04:00";
        
        writeModelHeader (startTime, endTime, name, description, transparencyPercent);
        writeModelInfo (lat, lon, alt, bearingDegCW, ewWidthM, nsWidthM, heightM);
        writeModelEnd (transSphereFileName);
    }
    
    private void writeModelHeader (String startTime, String endTime, String name, String description, double transparencyPercent) throws IOException
    {
        output.writeBytes (tab3 + "<Placemark>\r\n");
        if (name != null && name.length() > 0)
            writeName (tab4, name);
        if (description != null && description.length() > 0)
            writeDescription (tab4, description);
        output.writeBytes (tab4 + "<TimeSpan>\r\n");
        output.writeBytes (tab5 + "<begin>" + startTime + "</begin>\r\n");
        output.writeBytes (tab5 + "<end>" + endTime + "</end>\r\n");
        output.writeBytes (tab4 + "</TimeSpan>\r\n");
        output.writeBytes (tab4 + "<Model>\r\n");
        output.writeBytes (tab5 + "<altitudeMode>absolute</altitudeMode>\r\n");
    }

    private void writeModelInfo (double lat, double lon, double alt, double bearingDeg, double ewWidthM, double nsWidthM, double heightM) throws IOException
    {
        output.writeBytes (tab5 + "<Location>\r\n");
        output.writeBytes (tab6 + "<longitude>" + lon + "</longitude>\r\n");
        output.writeBytes (tab6 + "<latitude>" + lat + "</latitude>\r\n");
        double setAlt = alt - heightM*1.175;

        output.writeBytes (tab6 + "<altitude>" + setAlt + "</altitude>\r\n");
        output.writeBytes (tab5 + "</Location>\r\n");

        output.writeBytes (tab5 + "<Orientation>\r\n");
        output.writeBytes (tab6 + "<heading>" + bearingDeg + "</heading>\r\n");
        output.writeBytes (tab6 + "<tilt>" + 0 + "</tilt>\r\n");
        output.writeBytes (tab6 + "<roll>" + 0 + "</roll>\r\n");
        output.writeBytes (tab5 + "</Orientation>\r\n");

        output.writeBytes (tab5 + "<Scale>\r\n");
        output.writeBytes (tab6 + "<x>" + ewWidthM + "</x>\r\n");
        output.writeBytes (tab6 + "<y>" + nsWidthM + "</y>\r\n");
        output.writeBytes (tab6 + "<z>" + heightM + "</z>\r\n");
        output.writeBytes (tab5 + "</Scale>\r\n");
    }

    private void writeModelEnd(String filename) throws IOException
    {
        output.writeBytes (tab5 + "<Link><href>" + filename + "</href></Link>\r\n");
        output.writeBytes (tab4 + "</Model>\r\n");
        output.writeBytes (tab3 + "</Placemark>\r\n");
    }

    private void writeTransSphereFile (String foldername, String filename, Color sphereColor, double transparencyPercent)
    {
        try
        {
            File folder = new File (foldername);
            folder.mkdirs();

            File newFile = new File (filename);
            if (!newFile.exists())
                newFile.createNewFile();

            DataOutputStream sphereOutput = new DataOutputStream(new BufferedOutputStream (new FileOutputStream (newFile), 10000));

            String oneMeterSphereLines[] =
            {
                "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\" ?>\r\n",
                "<COLLADA xmlns=\"http://www.collada.org/2005/11/COLLADASchema\" version=\"1.4.1\">\r\n",
                "    <asset>\r\n",
                "        <contributor>\r\n",
                "            <authoring_tool>Google SketchUp 8.0.3117</authoring_tool>\r\n",
                "        </contributor>\r\n",
                "        <created>2010-12-22T18:41:43Z</created>\r\n",
                "        <modified>2010-12-22T18:41:43Z</modified>\r\n",
                "        <unit meter=\"0.02539999969303608\" name=\"inch\" />\r\n",
                "        <up_axis>Z_UP</up_axis>\r\n",
                "    </asset>\r\n",
                "    <library_visual_scenes>\r\n",
                "        <visual_scene id=\"ID1\">\r\n",
                "            <node name=\"SketchUp\">\r\n",
                "                <instance_geometry url=\"#ID2\">\r\n",
                "                    <bind_material>\r\n",
                "                        <technique_common>\r\n",
                "                            <instance_material symbol=\"Material2\" target=\"#ID4\">\r\n",
                "                                <bind_vertex_input semantic=\"UVSET0\" input_semantic=\"TEXCOORD\" input_set=\"0\" />\r\n",
                "                            </instance_material>\r\n",
                "                        </technique_common>\r\n",
                "                    </bind_material>\r\n",
                "                </instance_geometry>\r\n",
                "            </node>\r\n",
                "        </visual_scene>\r\n",
                "    </library_visual_scenes>\r\n",
                "    <library_geometries>\r\n",
                "        <geometry id=\"ID2\">\r\n",
                "            <mesh>\r\n",
                "                <source id=\"ID5\">\r\n",
                "                    <float_array id=\"ID8\" count=\"870\">-18.75594560470923 -1.83640619351103 51.62101403385562 -19.71963500992415 3.267378746845977 46.60880483454329 -19.89336458832677 -1.947771587192264 46.60880483454329 -18.59214915348646 3.08056376153616 51.62101403385562 -17.16132846243281 7.787598387106986 51.62101403385562 -18.20204489383286 8.259862618885334 46.60880483454329 -19.69052672910441 -1.927911607386131 41.47395700863437 -19.51856854214291 3.23406371321573 41.47395700863437 -17.64155535863671 -6.628228101275172 51.62101403385562 -18.7113942453743 -7.030184506408096 46.60880483454329 -16.35578300231159 -1.60140479388179 56.16901083270554 -16.2129472706876 2.686349889808784 56.16901083270554 -14.56099159710056 11.9639210522113 51.62101403385562 -15.44401549852831 12.68945050351604 46.60880483454329 -18.016452164994 8.175642936304921 41.47395700863437 -14.96522597572846 6.791034267911983 56.16901083270554 -18.16125509194275 -1.77817967889625 36.56640194972727 -18.00265209764398 2.982889025131625 36.56640194972727 -18.52060805961141 -6.958502937969202 41.47395700863437 -15.32492226892177 -10.96834721760225 51.62101403385562 -16.25427330664061 -11.63350196944142 46.60880483454329 -15.38399915153743 -5.78002638731587 56.16901083270554 -12.85644389603099 -1.258782345331102 59.94285676517153 -12.74416803802329 2.111602155552842 59.94285676517153 -11.63350196944142 16.25427330664059 46.60880483454329 -10.96834721760227 15.32492226892177 51.62101403385562 -15.28654434639569 12.5600656041737 41.47395700863437 -12.69764926172866 10.43292088337174 56.16901083270554 -16.61719811368003 7.540678771553959 36.56640194972727 -11.76339818895778 5.33808445912341 59.94285676517153 -15.40976701167347 -1.508779785205495 32.22058142496835 -15.2751928769496 2.530971822500795 32.22058142496835 -17.08219856461871 -6.418068376388208 36.56640194972727 -16.08854055760786 -11.51488379279948 41.47395700863437 -11.96392105221129 -14.56099159710054 51.62101403385562 -12.68945050351605 -15.44401549852832 46.60880483454329 -13.36382118184666 -9.564748734399601 56.16901083270554 -12.09257434880228 -4.543382909616906 59.94285676517153 -8.496402463029176 -0.8318880015173265 62.68537046753127 -8.422203027770889 1.39548866704234 62.68537046753127 -7.030184506408095 18.71139424537428 46.60880483454329 -6.628228101275183 17.64155535863671 51.62101403385562 -11.5148837927995 16.08854055760786 41.47395700863437 -9.564748734399618 13.36382118184666 56.16901083270554 -14.09930953948708 11.58458372125577 36.56640194972727 -9.980972193249446 8.200785128406388 59.94285676517153 -14.09963959111139 6.398241883132347 32.22058142496835 -7.774044374518613 3.527765089097123 62.68537046753127 -11.6235718539179 -1.138071083864518 28.73265592131192 -11.52206271861061 1.909109515854043 28.73265592131192 -14.49419099039585 -5.445710543926514 32.22058142496835 -14.83901843478378 -10.62057632038878 36.56640194972727 -12.56006560417371 -15.28654434639568 41.47395700863437 -7.787598387106979 -17.1613284624328 51.62101403385562 -8.25986261888534 -18.20204489383287 46.60880483454329 -10.43292088337173 -12.69764926172865 56.16901083270554 -10.50461584362667 -7.518359436907577 59.94285676517153 -7.991586111400975 -3.002572877533495 62.68537046753127 -3.572788321656068 -0.3498139064951156 64.20965416318717 -3.541587012994217 0.5868113750857718 64.20965416318717 -1.947771587192267 19.89336458832675 46.60880483454329 -1.836406193511035 18.75594560470924 51.62101403385562 -6.958502937969209 18.52060805961142 41.47395700863437 -5.780026387315879 15.38399915153744 56.16901083270554 -10.62057632038879 14.83901843478378 36.56640194972727 -7.518359436907595 10.50461584362667 59.94285676517153 -11.96321916789506 9.829482333023083 32.22058142496835 -6.596097444358648 5.419630150237397 62.68537046753127 -10.63534405013896 4.826187457019794 28.73265592131192 -3.269032402146098 1.483446431206204 64.20965416318717 -7.060692561693722 -0.6913167602446104 26.34032179776274 -6.999031240576963 1.159680993713293 26.34032179776274 -10.9329537762414 -4.107694019969096 28.73265592131192 -12.5908598059059 -9.011525128541116 32.22058142496835 -11.58458372125577 -14.09930953948708 36.56640194972727 -8.17564293630492 -18.01645216499399 41.47395700863437 -3.08056376153616 -18.59214915348646 51.62101403385562 -3.267378746845977 -19.71963500992414 46.60880483454329 -6.791034267911979 -14.96522597572844 56.16901083270554 -8.200785128406382 -9.980972193249434 59.94285676517153 -6.942156373001282 -4.968637373932048 62.68537046753127 -3.360510010508927 -1.262599948443153 64.20965416318717 6.128431095930864e-014 -4.302114220422482e-015 64.34986806266964 3.267378746845967 19.71963500992413 46.60880483454329 3.080563761536156 18.59214915348647 51.62101403385562 -1.927911607386136 19.69052672910441 41.47395700863437 -1.601404793881795 16.35578300231159 56.16901083270554 -6.418068376388213 17.0821985646187 36.56640194972727 -4.543382909616918 12.09257434880228 59.94285676517153 -9.01152512854113 12.59085980590589 32.22058142496835 -4.968637373932069 6.942156373001283 62.68537046753127 -9.023844260387373 7.414368698641521 28.73265592131192 -2.773698635423175 2.278987064551073 64.20965416318717 -6.460397506860907 2.931648404413082 26.34032179776274 -2.032081818251474 -0.1989623832040421 25.20661267132163 -2.014335563413737 0.3337585713732478 25.20661267132163 -6.641179353077211 -2.49520241944679 26.34032179776274 -9.49727296627443 -6.797384396898105 28.73265592131192 -9.829482333023083 -11.96321916789506 32.22058142496835 -7.540678771553958 -16.61719811368003 36.56640194972727 -3.23406371321573 -19.51856854214291 41.47395700863437 1.836406193511035 -18.75594560470924 51.62101403385562 1.947771587192268 -19.89336458832676 46.60880483454329 -2.686349889808781 -16.2129472706876 56.16901083270554 -5.338084459123404 -11.76339818895777 59.94285676517153 -5.419630150237389 -6.596097444358636 62.68537046753127 -2.919218495650974 -2.089341890449863 64.20965416318717 8.259862618885332 18.20204489383286 46.60880483454329 7.787598387106982 17.16132846243281 51.62101403385562 3.234063713215725 19.51856854214291 41.47395700863437 2.686349889808779 16.21294727068761 56.16901083270554 -1.778179678896254 18.16125509194274 36.56640194972727 -1.258782345331103 12.856443896031 59.94285676517153 -5.445710543926522 14.49419099039585 32.22058142496835 -3.002572877533511 7.991586111400976 62.68537046753127 -6.797384396898124 9.497272966274434 28.73265592131192 -2.08934189044989 2.919218495650981 64.20965416318717 -5.481498359363934 4.503828821130179 26.34032179776274 -1.85931566877629 0.8437344308735582 25.20661267132163 6.17284001691587e-014 -4.052314039881821e-015 25.28636162092423 -1.911345055349361 -0.7181243801668353 25.20661267132163 -5.769080746616289 -4.129044157280637 26.34032179776274 -7.414368698641514 -9.023844260387358 28.73265592131192 -6.398241883132345 -14.09963959111139 32.22058142496835 -2.982889025131622 -18.00265209764397 36.56640194972727 1.927911607386136 -19.69052672910441 41.47395700863437 6.628228101275171 -17.64155535863671 51.62101403385562 7.030184506408089 -18.71139424537429 46.60880483454329 1.601404793881795 -16.35578300231159 56.16901083270554 -2.111602155552837 -12.74416803802329 59.94285676517153 -3.527765089097115 -7.774044374518601 62.68537046753127 -2.27898706455106 -2.773698635423157 64.20965416318717 12.68945050351605 15.4440154985283 46.60880483454329 11.96392105221131 14.56099159710054 51.62101403385562 8.175642936304918 18.016452164994 41.47395700863437 6.791034267911977 14.96522597572845 56.16901083270554 2.982889025131618 18.00265209764398 36.56640194972727 2.111602155552836 12.7441680380233 59.94285676517153 -1.508779785205499 15.40976701167347 32.22058142496835 -0.8318880015173265 8.496402463029181 62.68537046753127 -4.107694019969109 10.93295377624141 28.73265592131192 -1.262599948443174 3.360510010508936 64.20965416318717 -4.12904415728066 5.769080746616293 26.34032179776274 -1.577586483976136 1.296211183246911 25.20661267132163 -1.660353285572238 -1.188347387377916 25.20661267132163 -4.50382882113017 -5.481498359363919 26.34032179776274 -4.826187457019786 -10.63534405013894 28.73265592131192 -2.530971822500791 -15.27519287694959 32.22058142496835 1.778179678896255 -18.16125509194274 36.56640194972727 6.958502937969199 -18.52060805961142 41.47395700863437 10.96834721760225 -15.32492226892177 51.62101403385562 11.63350196944142 -16.2542733066406 46.60880483454329 5.780026387315869 -15.38399915153743 56.16901083270554 1.258782345331106 -12.85644389603099 59.94285676517153 -1.395488667042332 -8.422203027770888 62.68537046753127 -1.483446431206191 -3.269032402146079 64.20965416318717 16.2542733066406 11.63350196944141 46.60880483454329 15.32492226892178 10.96834721760225 51.62101403385562 12.56006560417372 15.28654434639568 41.47395700863437 10.43292088337175 12.69764926172865 56.16901083270554 7.540678771553957 16.61719811368003 36.56640194972727 5.338084459123403 11.76339818895778 59.94285676517153 2.530971822500788 15.2751928769496 32.22058142496835 1.395488667042332 8.422203027770895 62.68537046753127 -1.13807108386452 11.62357185391791 28.73265592131192 -0.3498139064951138 3.572788321656082 64.20965416318717 -2.495202419446808 6.641179353077217 26.34032179776274 -1.188347387377945 1.660353285572246 25.20661267132163 -1.296211183246895 -1.577586483976116 25.20661267132163 -2.931648404413072 -6.460397506860891 26.34032179776274 -1.909109515854038 -11.52206271861061 28.73265592131192 1.508779785205499 -15.40976701167347 32.22058142496835 6.418068376388204 -17.08219856461871 36.56640194972727 11.51488379279948 -16.08854055760786 41.47395700863437 14.56099159710054 -11.96392105221131 51.62101403385562 15.44401549852831 -12.68945050351605 46.60880483454329 9.564748734399606 -13.36382118184666 56.16901083270554 4.543382909616909 -12.09257434880228 59.94285676517153 0.8318880015173309 -8.496402463029174 62.68537046753127 -0.5868113750857615 -3.541587012994219 64.20965416318717 18.71139424537429 7.030184506408088 46.60880483454329 17.64155535863672 6.628228101275172 51.62101403385562 16.08854055760787 11.51488379279948 41.47395700863437 13.36382118184666 9.564748734399604 56.16901083270554 11.58458372125578 14.09930953948707 36.56640194972727 8.200785128406395 9.980972193249432 59.94285676517153 6.398241883132343 14.09963959111139 32.22058142496835 3.527765089097111 7.774044374518608 62.68537046753127 1.909109515854039 11.52206271861062 28.73265592131192 0.5868113750857669 3.541587012994231 64.20965416318717 -0.69131676024461 7.060692561693732 26.34032179776274 -0.7181243801668584 1.911345055349372 25.20661267132163 -0.8437344308735439 -1.859315668776268 25.20661267132163 -1.159680993713284 -6.999031240576964 26.34032179776274 1.138071083864523 -11.6235718539179 28.73265592131192 5.445710543926514 -14.49419099039585 32.22058142496835 10.62057632038878 -14.83901843478378 36.56640194972727 15.28654434639568 -12.56006560417371 41.47395700863437 18.20204489383287 -8.25986261888534 46.60880483454329 17.16132846243281 -7.787598387106984 51.62101403385562 12.69764926172865 -10.43292088337174 56.16901083270554 7.518359436907585 -10.50461584362667 59.94285676517153 3.002572877533503 -7.991586111400974 62.68537046753127 0.3498139064951196 -3.572788321656071 64.20965416318717 19.89336458832676 1.947771587192255 46.60880483454329 18.75594560470924 1.836406193511023 51.62101403385562 18.52060805961142 6.958502937969199 41.47395700863437 15.38399915153744 5.78002638731587 56.16901083270554 14.83901843478378 10.62057632038878 36.56640194972727 10.50461584362668 7.518359436907582 59.94285676517153 9.829482333023091 11.96321916789505 32.22058142496835 5.419630150237401 6.596097444358632 62.68537046753127 4.826187457019785 10.63534405013895 28.73265592131192 1.483446431206189 3.269032402146094 64.20965416318717 1.159680993713288 6.999031240576975 26.34032179776274 -0.1989623832040399 2.032081818251491 25.20661267132163 -0.3337585713732358 -2.01433556341374 25.20661267132163 0.6913167602446149 -7.060692561693723 26.34032179776274 4.1076940199691 -10.9329537762414 28.73265592131192 9.011525128541123 -12.5908598059059 32.22058142496835 14.09930953948708 -11.58458372125578 36.56640194972727 18.016452164994 -8.175642936304921 41.47395700863437 19.71963500992414 -3.26737874684598 46.60880483454329 18.59214915348647 -3.080563761536165 51.62101403385562 14.96522597572845 -6.791034267911979 56.16901083270554 9.980972193249432 -8.200785128406391 59.94285676517153 4.968637373932059 -6.942156373001282 62.68537046753127 1.262599948443166 -3.360510010508928 64.20965416318717 19.69052672910441 1.927911607386124 41.47395700863437 16.35578300231159 1.601404793881783 56.16901083270554 17.08219856461871 6.418068376388203 36.56640194972727 12.09257434880228 4.543382909616908 59.94285676517153 12.5908598059059 9.011525128541116 32.22058142496835 6.942156373001286 4.968637373932054 62.68537046753127 7.414368698641528 9.02384426038736 28.73265592131192 2.278987064551077 2.77369863542316 64.20965416318717 2.931648404413071 6.460397506860903 26.34032179776274 0.3337585713732429 2.014335563413754 25.20661267132163 0.1989623832040461 -2.032081818251477 25.20661267132163 2.495202419446799 -6.641179353077211 26.34032179776274 6.797384396898115 -9.497272966274434 28.73265592131192 11.96321916789505 -9.829482333023091 32.22058142496835 16.61719811368003 -7.540678771553961 36.56640194972727 19.51856854214291 -3.234063713215734 41.47395700863437 16.2129472706876 -2.686349889808787 56.16901083270554 11.76339818895778 -5.338084459123403 59.94285676517153 6.596097444358635 -5.419630150237397 62.68537046753127 2.089341890449879 -2.919218495650974 64.20965416318717 18.16125509194275 1.778179678896243 36.56640194972727 12.856443896031 1.258782345331095 59.94285676517153 14.49419099039585 5.445710543926512 32.22058142496835 7.991586111400976 3.002572877533502 62.68537046753127 9.497272966274439 6.797384396898114 28.73265592131192 2.919218495650982 2.089341890449877 64.20965416318717 4.503828821130186 5.48149835936392 26.34032179776274 0.8437344308735435 1.859315668776285 25.20661267132163 0.7181243801668509 -1.911345055349361 25.20661267132163 4.129044157280649 -5.76908074661629 26.34032179776274 9.02384426038736 -7.414368698641524 28.73265592131192 14.09963959111139 -6.398241883132346 32.22058142496835 18.00265209764398 -2.982889025131627 36.56640194972727 12.74416803802329 -2.111602155552843 59.94285676517153 7.774044374518608 -3.527765089097112 62.68537046753127 2.773698635423161 -2.278987064551071 64.20965416318717 15.40976701167347 1.508779785205488 32.22058142496835 8.496402463029179 0.8318880015173193 62.68537046753127 10.93295377624141 4.107694019969101 28.73265592131192 3.360510010508934 1.262599948443165 64.20965416318717 5.769080746616297 4.129044157280648 26.34032179776274 1.296211183246914 1.57758648397612 25.20661267132163 1.188347387377932 -1.660353285572239 25.20661267132163 5.481498359363922 -4.503828821130179 26.34032179776274 10.63534405013895 -4.826187457019787 28.73265592131192 15.2751928769496 -2.530971822500796 32.22058142496835 8.422203027770893 -1.395488667042337 62.68537046753127 3.269032402146091 -1.483446431206189 64.20965416318717 11.62357185391791 1.138071083864512 28.73265592131192 3.57278832165608 0.3498139064951089 64.20965416318717 6.641179353077218 2.495202419446799 26.34032179776274 1.660353285572246 1.188347387377931 25.20661267132163 1.57758648397612 -1.296211183246907 25.20661267132163 6.460397506860902 -2.931648404413071 26.34032179776274 11.52206271861062 -1.909109515854043 28.73265592131192 3.541587012994229 -0.5868113750857682 64.20965416318717 7.060692561693732 0.6913167602446038 26.34032179776274 1.911345055349369 0.7181243801668495 25.20661267132163 1.859315668776281 -0.8437344308735422 25.20661267132163 6.999031240576973 -1.15968099371329 26.34032179776274 2.032081818251488 0.1989623832040355 25.20661267132163 2.01433556341375 -0.3337585713732429 25.20661267132163</float_array>\r\n",
                "                    <technique_common>\r\n",
                "                        <accessor count=\"290\" source=\"#ID8\" stride=\"3\">\r\n",
                "                            <param name=\"X\" type=\"float\" />\r\n",
                "                            <param name=\"Y\" type=\"float\" />\r\n",
                "                            <param name=\"Z\" type=\"float\" />\r\n",
                "                        </accessor>\r\n",
                "                    </technique_common>\r\n",
                "                </source>\r\n",
                "                <source id=\"ID6\">\r\n",
                "                    <float_array id=\"ID9\" count=\"870\">-0.9341742663809365 -0.09146557815617876 0.344894894198501 -0.9824437074446863 0.1627827131720163 0.09113808202226108 -0.991099016278383 -0.09703911550155774 0.09113808202226138 -0.9260160837501228 0.1534331274265474 0.3448948941984996 -0.8547514353256727 0.3878756189353864 0.3448948941984981 -0.9068364835136258 0.4115111689540703 0.09113808202226052 -0.980941933962436 -0.09604462931215865 -0.1689033788126396 -0.9723753273500612 0.1611144667202038 -0.1689033788126386 -0.8786700165538579 -0.3301310557415768 0.3448948941985008 -0.9322125650212734 -0.3502478888184218 0.09113808202226111 -0.8142758433997668 -0.0797262496682809 0.5749770221229973 -0.8071647386718971 0.1337404526510145 0.5749770221229976 -0.7252368891273114 0.5958850280085467 0.3448948941984983 -0.7694298518492573 0.6321958186262653 0.0911380820222603 -0.8975429491049862 0.4072938780998294 -0.1689033788126378 -0.7450466909063376 0.3380929641386911 0.5749770221229977 -0.9044404894546269 -0.08855432573229494 -0.4173074794790693 -0.8965419731314798 0.1485495135782649 -0.4173074794790696 -0.922658968858464 -0.3466584425781522 -0.1689033788126395 -0.7632858571694927 -0.5462986474455505 0.3448948941985007 -0.8097973680120679 -0.5795878473243129 0.09113808202226108 -0.7658953950543975 -0.2877597398265406 0.5749770221229974 -0.6398716069779942 -0.06265022339429305 0.7659238056700187 -0.6342835816835034 0.1050954895069326 0.7659238056700188 -0.5795878473243133 0.8097973680120677 0.09113808202226031 -0.546298647445551 0.7632858571694933 0.3448948941984983 -0.7615445021382606 0.6257168847719095 -0.168903378812638 -0.6321549424033834 0.5194049988453566 0.5749770221229977 -0.8275456029450856 0.3755299490281441 -0.4173074794790698 -0.5854701785004617 0.2656791184767691 0.7659238056700186 -0.7670878234554855 -0.07510604155339733 -0.6371305624662068 -0.7603888136638037 0.1259900727297536 -0.6371305624662064 -0.8507028810800194 -0.3196233340871417 -0.4173074794790693 -0.8014983197928276 -0.5736480558626069 -0.1689033788126395 -0.5958850280085462 -0.7252368891273107 0.3448948941985007 -0.6321958186262652 -0.7694298518492572 0.09113808202226109 -0.6653204412380563 -0.4761828792610756 0.5749770221229975 -0.6018534396947622 -0.2261264271055875 0.7659238056700187 -0.4229008067441217 -0.04140647862354241 0.9052294798465025 -0.4192075964510326 0.06945919589643333 0.9052294798465023 -0.3502478888184215 0.9322125650212736 0.09113808202226063 -0.3301310557415769 0.8786700165538588 0.3448948941984986 -0.5736480558626073 0.8014983197928275 -0.1689033788126381 -0.4761828792610756 0.6653204412380561 0.5749770221229977 -0.7021533675017546 0.5769186390443387 -0.4173074794790696 -0.4967579501878299 0.4081571545779162 0.7659238056700187 -0.7018705628228625 0.3185001717648115 -0.6371305624662059 -0.3869460812331144 0.1755913410028159 0.9052294798465022 -0.5785000448963364 -0.05664129592737272 -0.8137133780703159 -0.5734479800000489 0.09501553864110415 -0.8137133780703156 -0.7215110657512422 -0.2710838032232865 -0.6371305624662067 -0.7389912772127909 -0.5289105404264828 -0.4173074794790693 -0.6257168847719097 -0.7615445021382603 -0.1689033788126395 -0.3878756189353859 -0.8547514353256719 0.3448948941985006 -0.4115111689540701 -0.9068364835136257 0.09113808202226117 -0.5194049988453569 -0.6321549424033834 0.5749770221229975 -0.5228199551061684 -0.3741924885012253 0.7659238056700187 -0.3977740259342261 -0.1494503700527652 0.9052294798465024 -0.1777597713384836 -0.01740456876571101 0.9839199889624001 -0.1762073878794424 0.02919609180924425 0.9839199889624004 -0.09703911550155779 0.9910990162783833 0.09113808202226097 -0.09146557815617902 0.9341742663809373 0.3448948941984987 -0.3466584425781523 0.9226589688584643 -0.1689033788126379 -0.2877597398265404 0.7658953950543976 0.5749770221229977 -0.5289105404264828 0.7389912772127908 -0.4173074794790697 -0.3741924885012253 0.5228199551061683 0.7659238056700187 -0.5955209930214895 0.4893050104405177 -0.6371305624662058 -0.3283148300377929 0.2697572263982675 0.9052294798465023 -0.5293163829343528 0.2401972212717917 -0.8137133780703151 -0.1626467621328964 0.07380708697622335 0.9839199889623999 -0.35146040841423 -0.03441170519409886 -0.9355701020569956 -0.3483910900840944 0.05772549252348714 -0.9355701020569956 -0.5441282877494647 -0.2044381197825665 -0.8137133780703157 -0.6267645212694645 -0.4485876516906747 -0.6371305624662066 -0.5769186390443388 -0.7021533675017546 -0.4173074794790695 -0.4072938780998293 -0.897542949104986 -0.1689033788126393 -0.1534331274265473 -0.9260160837501226 0.3448948941985005 -0.1627827131720163 -0.9824437074446863 0.09113808202226127 -0.338092964138691 -0.7450466909063376 0.5749770221229975 -0.4081571545779163 -0.4967579501878298 0.7659238056700187 -0.3455396026095716 -0.247309465741306 0.9052294798465024 -0.1671981201427183 -0.06281913674169316 0.9839199889624002 2.814931493115761e-016 -6.539600178014515e-017 0.9999999999999999 0.1627827131720162 0.9824437074446863 0.09113808202226097 0.1534331274265472 0.9260160837501231 0.344894894198499 -0.09604462931215886 0.9809419339624362 -0.1689033788126378 -0.07972624966828122 0.8142758433997663 0.5749770221229976 -0.3196233340871416 0.8507028810800192 -0.4173074794790698 -0.2261264271055874 0.6018534396947622 0.7659238056700188 -0.448587651690675 0.6267645212694649 -0.637130562466206 -0.247309465741306 0.3455396026095718 0.9052294798465023 -0.4491127491083613 0.3690098602174828 -0.8137133780703152 -0.1380020283334739 0.1133882511377502 0.9839199889624002 -0.321579494708227 0.1459287933214846 -0.9355701020569952 -0.1009170834349919 -0.009880853834666626 -0.9948457724685131 -0.1000357703579117 0.0165750912644837 -0.9948457724685135 -0.3305782807267223 -0.1242038020707389 -0.9355701020569954 -0.472675087006979 -0.3383028236245452 -0.8137133780703157 -0.4893050104405173 -0.5955209930214889 -0.6371305624662066 -0.375529949028144 -0.8275456029450858 -0.4173074794790695 -0.1611144667202038 -0.9723753273500611 -0.168903378812639 0.09146557815617863 -0.9341742663809368 0.3448948941985003 0.09703911550155761 -0.991099016278383 0.09113808202226109 -0.1337404526510145 -0.8071647386718971 0.5749770221229976 -0.265679118476769 -0.5854701785004617 0.7659238056700186 -0.2697572263982674 -0.3283148300377927 0.9052294798465024 -0.1452421933671844 -0.1039526843622608 0.9839199889624002 0.4115111689540704 0.9068364835136257 0.09113808202226086 0.3878756189353866 0.8547514353256724 0.3448948941984991 0.1611144667202038 0.9723753273500613 -0.1689033788126379 0.1337404526510142 0.8071647386718971 0.5749770221229977 -0.08855432573229519 0.9044404894546264 -0.4173074794790699 -0.06265022339429341 0.6398716069779942 0.7659238056700187 -0.2710838032232867 0.7215110657512427 -0.6371305624662064 -0.1494503700527652 0.3977740259342262 0.9052294798465023 -0.3383028236245455 0.4726750870069797 -0.8137133780703152 -0.1039526843622608 0.1452421933671844 0.9839199889624001 -0.2728527882032353 0.224187288013356 -0.9355701020569954 -0.09233718484787222 0.04190147128559456 -0.9948457724685129 -6.47876668798647e-016 1.030021592520256e-016 -0.9999999999999999 -0.09492106404934159 -0.03566343507386792 -0.9948457724685131 -0.2871677895141277 -0.2055316150927455 -0.9355701020569954 -0.3690098602174824 -0.4491127491083608 -0.8137133780703157 -0.3185001717648112 -0.7018705628228619 -0.6371305624662067 -0.1485495135782649 -0.8965419731314797 -0.4173074794790697 0.09604462931215856 -0.9809419339624362 -0.1689033788126389 0.3301310557415761 -0.8786700165538582 0.3448948941985 0.3502478888184211 -0.9322125650212737 0.0911380820222608 0.07972624966828072 -0.8142758433997664 0.5749770221229976 -0.1050954895069326 -0.6342835816835036 0.7659238056700187 -0.1755913410028158 -0.3869460812331141 0.9052294798465024 -0.1133882511377501 -0.1380020283334737 0.9839199889624001 0.6321958186262653 0.7694298518492573 0.09113808202226083 0.5958850280085467 0.7252368891273111 0.3448948941984992 0.4072938780998295 0.8975429491049862 -0.1689033788126381 0.3380929641386912 0.7450466909063374 0.5749770221229977 0.1485495135782648 0.8965419731314794 -0.4173074794790699 0.1050954895069325 0.6342835816835036 0.7659238056700186 -0.0751060415533976 0.7670878234554861 -0.6371305624662064 -0.0414064786235426 0.4229008067441218 0.9052294798465023 -0.2044381197825667 0.5441282877494654 -0.8137133780703154 -0.06281913674169309 0.1671981201427182 0.9839199889624001 -0.2055316150927457 0.2871677895141279 -0.9355701020569954 -0.07834597278485754 0.0643723352840459 -0.9948457724685131 -0.0824563310132035 -0.0590156121493982 -0.9948457724685131 -0.2241872880133559 -0.2728527882032351 -0.9355701020569954 -0.2401972212717913 -0.5293163829343519 -0.8137133780703157 -0.1259900727297536 -0.7603888136638036 -0.6371305624662066 0.08855432573229474 -0.9044404894546265 -0.4173074794790697 0.3466584425781514 -0.9226589688584644 -0.1689033788126388 0.5462986474455503 -0.7632858571694932 0.3448948941984999 0.5795878473243128 -0.809797368012068 0.09113808202226077 0.28775973982654 -0.7658953950543977 0.5749770221229977 0.06265022339429306 -0.6398716069779943 0.7659238056700186 -0.06945919589643339 -0.4192075964510326 0.9052294798465024 -0.07380708697622301 -0.1626467621328953 0.9839199889624002 0.809797368012068 0.5795878473243129 0.09113808202226083 0.7632858571694932 0.5462986474455506 0.3448948941984993 0.6257168847719098 0.7615445021382606 -0.1689033788126383 0.5194049988453569 0.6321549424033832 0.5749770221229976 0.3755299490281442 0.8275456029450854 -0.4173074794790699 0.2656791184767692 0.5854701785004616 0.7659238056700186 0.1259900727297535 0.7603888136638038 -0.6371305624662064 0.06945919589643342 0.4192075964510326 0.9052294798465024 -0.056641295927373 0.5785000448963368 -0.8137133780703153 -0.01740456876571102 0.1777597713384837 0.9839199889624002 -0.1242038020707389 0.3305782807267226 -0.9355701020569954 -0.05901561214939831 0.08245633101320372 -0.9948457724685131 -0.06437233528404572 -0.07834597278485743 -0.9948457724685131 -0.1459287933214845 -0.3215794947082267 -0.9355701020569954 -0.09501553864110413 -0.5734479800000489 -0.8137133780703156 0.07510604155339713 -0.7670878234554858 -0.6371305624662066 0.3196233340871409 -0.8507028810800196 -0.4173074794790695 0.5736480558626066 -0.8014983197928278 -0.1689033788126386 0.7252368891273107 -0.5958850280085465 0.3448948941984998 0.7694298518492571 -0.6321958186262656 0.09113808202226072 0.4761828792610753 -0.6653204412380565 0.5749770221229976 0.2261264271055872 -0.6018534396947625 0.7659238056700187 0.04140647862354244 -0.4229008067441218 0.9052294798465024 -0.0291960918092445 -0.176207387879443 0.9839199889624002 0.9322125650212737 0.3502478888184214 0.09113808202226084 0.8786700165538584 0.3301310557415765 0.3448948941984996 0.8014983197928278 0.5736480558626067 -0.1689033788126386 0.6653204412380563 0.4761828792610752 0.574977022122998 0.5769186390443386 0.7021533675017546 -0.4173074794790699 0.4081571545779164 0.4967579501878297 0.7659238056700187 0.3185001717648114 0.7018705628228623 -0.6371305624662061 0.175591341002816 0.3869460812331141 0.9052294798465024 0.09501553864110404 0.5734479800000495 -0.8137133780703152 0.02919609180924454 0.1762073878794435 0.9839199889624002 -0.03441170519409902 0.35146040841423 -0.9355701020569954 -0.03566343507386784 0.09492106404934156 -0.9948457724685131 -0.04190147128559395 -0.09233718484787036 -0.9948457724685131 -0.05772549252348724 -0.3483910900840946 -0.9355701020569954 0.05664129592737265 -0.5785000448963367 -0.8137133780703155 0.271083803223286 -0.7215110657512428 -0.6371305624662066 0.5289105404264825 -0.7389912772127911 -0.4173074794790695 0.7615445021382602 -0.6257168847719099 -0.1689033788126388 0.9068364835136256 -0.4115111689540708 0.09113808202226079 0.8547514353256719 -0.3878756189353866 0.3448948941985 0.6321549424033831 -0.519404998845357 0.5749770221229976 0.3741924885012251 -0.5228199551061685 0.7659238056700186 0.149450370052765 -0.3977740259342262 0.9052294798465024 0.01740456876571096 -0.1777597713384836 0.9839199889624003 0.9910990162783832 0.09703911550155762 0.09113808202226092 0.9341742663809368 0.09146557815617866 0.3448948941984998 0.9226589688584642 0.3466584425781517 -0.1689033788126387 0.7658953950543974 0.2877597398265401 0.5749770221229978 0.7389912772127908 0.5289105404264823 -0.41730747947907 0.5228199551061685 0.3741924885012251 0.7659238056700187 0.4893050104405178 0.5955209930214894 -0.6371305624662061 0.2697572263982676 0.3283148300377928 0.9052294798465023 0.2401972212717917 0.5293163829343525 -0.8137133780703152 0.07380708697622297 0.1626467621328954 0.9839199889624001 0.05772549252348713 0.3483910900840948 -0.9355701020569954 -0.009880853834666609 0.1009170834349922 -0.9948457724685131 -0.01657509126448421 -0.1000357703579136 -0.9948457724685131 0.03441170519409882 -0.3514604084142301 -0.9355701020569955 0.2044381197825662 -0.5441282877494653 -0.8137133780703156 0.4485876516906745 -0.6267645212694648 -0.6371305624662065 0.7021533675017545 -0.5769186390443388 -0.4173074794790695 0.8975429491049859 -0.4072938780998299 -0.1689033788126389 0.9824437074446863 -0.1627827131720164 0.09113808202226092 0.9260160837501229 -0.1534331274265474 0.3448948941984999 0.7450466909063375 -0.3380929641386912 0.5749770221229978 0.4967579501878297 -0.4081571545779164 0.7659238056700188 0.2473094657413059 -0.3455396026095718 0.9052294798465023 0.06281913674169301 -0.1671981201427183 0.9839199889624002 0.9809419339624361 0.09604462931215854 -0.1689033788126387 0.8142758433997664 0.07972624966828075 0.5749770221229978 0.8507028810800191 0.3196233340871411 -0.41730747947907 0.6018534396947625 0.2261264271055872 0.7659238056700187 0.6267645212694651 0.4485876516906747 -0.6371305624662061 0.3455396026095718 0.247309465741306 0.9052294798465024 0.3690098602174828 0.4491127491083612 -0.8137133780703152 0.1133882511377502 0.1380020283334738 0.9839199889624002 0.1459287933214846 0.3215794947082267 -0.9355701020569954 0.01657509126448427 0.1000357703579137 -0.9948457724685131 0.009880853834666574 -0.1009170834349919 -0.9948457724685131 0.1242038020707385 -0.3305782807267223 -0.9355701020569954 0.3383028236245451 -0.4726750870069795 -0.8137133780703156 0.5955209930214889 -0.4893050104405177 -0.6371305624662065 0.8275456029450856 -0.3755299490281446 -0.4173074794790696 0.9723753273500612 -0.1611144667202039 -0.1689033788126387 0.8071647386718971 -0.1337404526510144 0.5749770221229977 0.5854701785004616 -0.2656791184767692 0.7659238056700186 0.3283148300377928 -0.2697572263982675 0.9052294798465023 0.1039526843622608 -0.1452421933671846 0.9839199889624001 0.9044404894546264 0.08855432573229481 -0.4173074794790698 0.6398716069779943 0.06265022339429306 0.7659238056700187 0.7215110657512429 0.2710838032232863 -0.6371305624662063 0.3977740259342264 0.1494503700527651 0.9052294798465024 0.4726750870069797 0.3383028236245453 -0.8137133780703153 0.1452421933671847 0.1039526843622609 0.9839199889624002 0.2241872880133559 0.2728527882032352 -0.9355701020569954 0.04190147128559404 0.09233718484787033 -0.9948457724685133 0.03566343507386784 -0.09492106404934141 -0.9948457724685131 0.2055316150927454 -0.2871677895141278 -0.9355701020569954 0.449112749108361 -0.3690098602174828 -0.8137133780703155 0.7018705628228621 -0.3185001717648118 -0.6371305624662064 0.8965419731314795 -0.148549513578265 -0.4173074794790697 0.6342835816835035 -0.1050954895069327 0.7659238056700188 0.386946081233114 -0.175591341002816 0.9052294798465024 0.1380020283334738 -0.1133882511377502 0.9839199889624002 0.767087823455486 0.07510604155339733 -0.6371305624662064 0.4229008067441218 0.04140647862354242 0.9052294798465024 0.5441282877494656 0.2044381197825665 -0.8137133780703152 0.1671981201427183 0.06281913674169305 0.9839199889624002 0.2871677895141279 0.2055316150927455 -0.9355701020569954 0.06437233528404572 0.07834597278485737 -0.9948457724685131 0.05901561214939823 -0.08245633101320365 -0.9948457724685131 0.2728527882032351 -0.2241872880133559 -0.9355701020569954 0.5293163829343521 -0.2401972212717918 -0.8137133780703154 0.7603888136638037 -0.1259900727297537 -0.6371305624662065 0.4192075964510327 -0.06945919589643342 0.9052294798465024 0.1626467621328955 -0.07380708697622307 0.9839199889624002 0.5785000448963368 0.05664129592737275 -0.8137133780703154 0.1777597713384836 0.01740456876571095 0.9839199889624002 0.3305782807267224 0.1242038020707386 -0.9355701020569954 0.08245633101320371 0.05901561214939816 -0.9948457724685131 0.07834597278485722 -0.06437233528404554 -0.9948457724685131 0.3215794947082266 -0.1459287933214845 -0.9355701020569954 0.5734479800000492 -0.09501553864110415 -0.8137133780703154 0.1762073878794433 -0.0291960918092445 0.9839199889624002 0.3514604084142299 0.03441170519409877 -0.9355701020569954 0.09492106404934178 0.03566343507386789 -0.9948457724685131 0.09233718484787008 -0.04190147128559385 -0.9948457724685131 0.3483910900840945 -0.05772549252348724 -0.9355701020569954 0.100917083434992 0.009880853834666548 -0.9948457724685131 0.1000357703579133 -0.01657509126448422 -0.9948457724685131</float_array>\r\n",
                "                    <technique_common>\r\n",
                "                        <accessor count=\"290\" source=\"#ID9\" stride=\"3\">\r\n",
                "                            <param name=\"X\" type=\"float\" />\r\n",
                "                            <param name=\"Y\" type=\"float\" />\r\n",
                "                            <param name=\"Z\" type=\"float\" />\r\n",
                "                        </accessor>\r\n",
                "                    </technique_common>\r\n",
                "                </source>\r\n",
                "                <vertices id=\"ID7\">\r\n",
                "                    <input semantic=\"POSITION\" source=\"#ID5\" />\r\n",
                "                    <input semantic=\"NORMAL\" source=\"#ID6\" />\r\n",
                "                </vertices>\r\n",
                "                <triangles count=\"576\" material=\"Material2\">\r\n",
                "                    <input offset=\"0\" semantic=\"VERTEX\" source=\"#ID7\" />\r\n",
                "                    <p>0 1 2 1 0 3 4 1 3 1 4 5 1 6 2 6 1 7 8 2 9 2 8 0 10 3 0 3 10 11 12 5 4 5 12 13 1 14 7 14 1 5 15 3 11 3 15 4 7 16 6 16 7 17 2 18 9 18 2 6 19 9 20 9 19 8 21 0 8 0 21 10 22 11 10 11 22 23 12 24 13 24 12 25 5 26 14 26 5 13 27 4 15 4 27 12 7 28 17 28 7 14 29 11 23 11 29 15 17 30 16 30 17 31 6 32 18 32 6 16 9 33 20 33 9 18 34 20 35 20 34 19 36 8 19 8 36 21 37 10 21 10 37 22 38 23 22 23 38 39 25 40 24 40 25 41 13 42 26 42 13 24 27 25 12 25 27 43 14 44 28 44 14 26 29 27 15 27 29 45 17 46 31 46 17 28 39 29 23 29 39 47 31 48 30 48 31 49 16 50 32 50 16 30 18 51 33 51 18 32 20 52 35 52 20 33 53 35 54 35 53 34 55 19 34 19 55 36 36 37 21 37 36 56 37 38 22 38 37 57 58 39 38 39 58 59 41 60 40 60 41 61 24 62 42 62 24 40 43 41 25 41 43 63 26 64 44 64 26 42 45 43 27 43 45 65 28 66 46 66 28 44 47 45 29 45 47 67 46 49 31 49 46 68 59 47 39 47 59 69 49 70 48 70 49 71 48 50 30 50 48 72 32 73 51 73 32 50 33 74 52 74 33 51 54 52 75 52 54 35 76 54 77 54 76 53 78 34 53 34 78 55 55 56 36 56 55 79 56 57 37 57 56 80 57 58 38 58 57 81 82 59 58 61 83 60 83 61 84 40 85 62 85 40 60 63 61 41 61 63 86 42 87 64 87 42 62 65 63 43 63 65 88 44 89 66 89 44 64 67 65 45 65 67 90 66 68 46 68 66 91 69 67 47 67 69 92 68 71 49 71 68 93 82 69 59 71 94 70 94 71 95 70 72 48 72 70 96 72 73 50 73 72 97 51 98 74 98 51 73 75 74 99 74 75 52 77 75 100 75 77 54 101 77 102 77 101 76 103 53 76 53 103 78 78 79 55 79 78 104 79 80 56 80 79 105 80 81 57 81 80 106 82 58 81 84 107 83 107 84 108 60 109 85 109 60 83 86 84 61 84 86 110 62 111 87 111 62 85 88 86 63 86 88 112 64 113 89 113 64 87 90 88 65 88 90 114 89 91 66 91 89 115 92 90 67 90 92 116 91 93 68 93 91 117 82 92 69 93 95 71 95 93 118 119 94 95 94 96 70 96 94 120 96 97 72 97 96 121 97 98 73 98 97 122 99 98 123 98 99 74 100 99 124 99 100 75 102 100 125 100 102 77 126 102 127 102 126 101 128 76 101 76 128 103 129 78 103 78 129 104 104 105 79 105 104 130 105 106 80 106 105 131 82 81 106 108 132 107 132 108 133 83 134 109 134 83 107 110 108 84 108 110 135 85 136 111 136 85 109 112 110 86 110 112 137 87 138 113 138 87 111 114 112 88 112 114 139 113 115 89 115 113 140 116 114 90 114 116 141 115 117 91 117 115 142 82 116 92 117 118 93 118 117 143 119 95 118 119 120 94 120 121 96 121 120 144 121 122 97 122 121 145 122 123 98 123 122 146 124 123 147 123 124 99 125 124 148 124 125 100 127 125 149 125 127 102 150 127 151 127 150 126 152 101 126 101 152 128 153 103 128 103 153 129 129 130 104 130 129 154 130 131 105 131 130 155 82 106 131 156 133 157 133 156 132 107 158 134 158 107 132 135 133 108 133 135 159 109 160 136 160 109 134 137 135 110 135 137 161 111 162 138 162 111 136 139 137 112 137 139 163 138 140 113 140 138 164 141 139 114 139 141 165 140 142 115 142 140 166 82 141 116 142 143 117 143 142 167 119 118 143 119 144 120 144 145 121 145 144 168 145 146 122 146 145 169 146 147 123 147 146 170 148 147 171 147 148 124 149 148 172 148 149 125 151 149 173 149 151 127 174 151 175 151 174 150 176 126 150 126 176 152 177 128 152 128 177 153 153 154 129 154 153 178 154 155 130 155 154 179 82 131 155 180 157 181 157 180 156 158 156 182 156 158 132 157 159 183 159 157 133 134 184 160 184 134 158 185 135 161 135 185 159 136 186 162 186 136 160 187 137 163 137 187 161 162 164 138 164 162 188 165 163 139 163 165 189 164 166 140 166 164 190 82 165 141 166 167 142 167 166 191 119 143 167 119 168 144 168 169 145 169 168 192 169 170 146 170 169 193 170 171 147 171 170 194 172 171 195 171 172 148 173 172 196 172 173 149 175 173 197 173 175 151 198 174 175 174 198 199 200 150 174 150 200 176 152 201 177 201 152 176 153 202 178 202 153 177 178 179 154 179 178 203 82 155 179 204 181 205 181 204 180 182 180 206 180 182 156 181 183 207 183 181 157 184 182 208 182 184 158 209 159 185 159 209 183 160 210 186 210 160 184 211 161 187 161 211 185 162 212 188 212 162 186 213 163 189 163 213 187 188 190 164 190 188 214 189 165 82 190 191 166 191 190 215 119 167 191 119 192 168 192 193 169 193 192 216 193 194 170 194 193 217 218 171 194 171 218 195 196 195 219 195 196 172 197 196 220 196 197 173 197 198 175 198 197 221 222 199 198 199 222 223 199 200 174 200 199 224 176 225 201 225 176 200 177 226 202 226 177 201 178 227 203 227 178 202 203 82 179 204 223 222 223 204 205 206 204 228 204 206 180 205 207 229 207 205 181 208 206 230 206 208 182 231 183 209 183 231 207 210 208 232 208 210 184 233 185 211 185 233 209 186 234 212 234 186 210 235 187 213 187 235 211 188 236 214 236 188 212 213 189 82 214 215 190 215 214 237 119 191 215 119 216 192 216 217 193 217 216 238 239 194 217 194 239 218 240 195 218 195 240 219 220 219 241 219 220 196 220 221 197 221 220 242 221 222 198 222 221 243 223 224 199 224 223 244 200 245 225 245 200 224 201 246 226 246 201 225 202 247 227 247 202 226 227 82 203 243 204 222 204 243 228 205 244 223 244 205 229 230 228 248 228 230 206 229 231 249 231 229 207 232 230 250 230 232 208 251 209 233 209 251 231 210 252 234 252 210 232 253 211 235 211 253 233 212 254 236 254 212 234 235 213 82 214 255 237 255 214 236 237 119 215 238 216 119 256 217 238 217 256 239 257 218 239 218 257 240 258 219 240 219 258 241 241 242 220 242 241 259 242 243 221 243 242 260 244 245 224 245 244 261 225 262 246 262 225 245 226 263 247 263 226 246 247 82 227 260 228 243 228 260 248 229 261 244 261 229 249 250 248 264 248 250 230 265 231 251 231 265 249 232 266 252 266 232 250 267 233 253 233 267 251 234 268 254 268 234 252 253 235 82 236 269 255 269 236 254 255 119 237 256 238 119 270 239 256 239 270 257 271 240 257 240 271 258 272 241 258 241 272 259 259 260 242 260 259 273 245 274 262 274 245 261 246 275 263 275 246 262 263 82 247 273 248 260 248 273 264 261 265 274 265 261 249 250 276 266 276 250 264 277 251 267 251 277 265 252 278 268 278 252 266 267 253 82 254 279 269 279 254 268 269 119 255 270 256 119 280 257 270 257 280 271 281 258 271 258 281 272 282 259 272 259 282 273 262 283 275 283 262 274 275 82 263 276 273 282 273 276 264 274 277 283 277 274 265 266 284 278 284 266 276 277 267 82 268 285 279 285 268 278 279 119 269 280 270 119 286 271 280 271 286 281 287 272 281 272 287 282 283 82 275 284 282 287 282 284 276 277 82 283 278 288 285 288 278 284 285 119 279 286 280 119 289 281 286 281 289 287 288 287 289 287 288 284 288 119 285 289 286 119 288 289 119</p>\r\n",
                "                </triangles>\r\n",
                "            </mesh>\r\n",
                "        </geometry>\r\n",
                "    </library_geometries>\r\n",
                "    <library_materials>\r\n",
                "        <material id=\"ID4\" name=\"material_0\">\r\n",
                "            <instance_effect url=\"#ID3\" />\r\n",
                "        </material>\r\n",
                "    </library_materials>\r\n",
                "    <library_effects>\r\n",
                "        <effect id=\"ID3\">\r\n",
                "            <profile_COMMON>\r\n",
                "                <technique sid=\"COMMON\">\r\n",
                "                    <lambert>\r\n",
                "                        <diffuse>\r\n",
                "                            <color>" + sphereColor.getRed()/255.0 + " " + sphereColor.getGreen()/255.0 + " " + sphereColor.getBlue()/255.0 + " 1</color>\r\n",
                "                        </diffuse>\r\n",
                "				<transparent>\r\n",
                "	                     <color>1 1 1 1</color>\r\n",
                "      	            </transparent>\r\n",
                "            	      <transparency>\r\n",
                "                  	   <float>" + transparencyPercent/100.0 + "</float>\r\n",
                "	                  </transparency>\r\n",
                "                    </lambert>\r\n",
                "                </technique>\r\n",
                "            </profile_COMMON>\r\n",
                "        </effect>\r\n",
                "    </library_effects>\r\n",
                "    <scene>\r\n",
                "        <instance_visual_scene url=\"#ID1\" />\r\n",
                "    </scene>\r\n",
                "</COLLADA>\r\n",
            };

            for (int i = 0; i < oneMeterSphereLines.length; i ++)
            {
                sphereOutput.writeBytes (oneMeterSphereLines[i]);
            }
            sphereOutput.flush();
            sphereOutput.close();
        }
        catch (Exception e)
        {
            e.printStackTrace();
            System.err.println ("Error writing transparent sphere model file");
        }
    }

    public void writePolygonBox (long startTimeMillis, long endTimeMillis, double lat, double lon, double alt, String style, String name, String description) throws IOException
    {
        writePolygonBox (startTimeMillis, endTimeMillis, lat, lon, alt, style, name, description, boxSizeLat/2.0, boxSizeLon/2.0, boxSizeFt/2.0);
    }
    
    public void writePolygonSquare (long startTimeMillis, long endTimeMillis, double lat, double lon, double alt, String style, String name, String description) throws IOException
    {
            DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
            //String startTime = formatter.format(new Date(startTimeMillis)) + "Z";
            String startTime = formatter.format(new Date(startTimeMillis)) + "-04:00";
            //String endTime = formatter.format(new Date(endTimeMillis)) + "Z";
            String endTime = formatter.format(new Date(endTimeMillis)) + "-04:00";

            writePolyBoxHeader(startTime, endTime, style, name, description);
            writeCoord (lon-boxSizeLon, lat-boxSizeLat, alt);
            writeCoord (lon+boxSizeLon, lat-boxSizeLat, alt);
            writeCoord (lon+boxSizeLon, lat+boxSizeLat, alt);
            writeCoord (lon-boxSizeLon, lat+boxSizeLat, alt);
            writeCoord (lon-boxSizeLon, lat-boxSizeLat, alt);
            writePolyBoxEnd();
    }
        
    private void writePolygonBox (long startTimeMillis, long endTimeMillis, double lat, double lon, double alt, String style, String name, String description, double boxSizeLat, double boxSizeLon, double boxSizeF) throws IOException
    {
        DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
        //String startTime = formatter.format(new Date(startTimeMillis)) + "Z";
        String startTime = formatter.format(new Date(startTimeMillis)) + "-04:00";
        //String endTime = formatter.format(new Date(endTimeMillis)) + "Z";
        String endTime = formatter.format(new Date(endTimeMillis)) + "-04:00";

        writePolyBoxHeader(startTime, endTime, style, name, description);
        writeCoord (lon-boxSizeLon, lat-boxSizeLat, alt+boxSizeF);
        writeCoord (lon+boxSizeLon, lat-boxSizeLat, alt+boxSizeF);
        writeCoord (lon+boxSizeLon, lat+boxSizeLat, alt+boxSizeF);
        writeCoord (lon-boxSizeLon, lat+boxSizeLat, alt+boxSizeF);
        writePolyBoxEnd();

        writePolyBoxHeader(startTime, endTime, style, name, description);
        writeCoord (lon-boxSizeLon, lat-boxSizeLat, alt-boxSizeF);
        writeCoord (lon+boxSizeLon, lat-boxSizeLat, alt-boxSizeF);
        writeCoord (lon+boxSizeLon, lat+boxSizeLat, alt-boxSizeF);
        writeCoord (lon-boxSizeLon, lat+boxSizeLat, alt-boxSizeF);
        writePolyBoxEnd();

        writePolyBoxHeader(startTime, endTime, style, name, description);
        writeCoord (lon-boxSizeLon, lat+boxSizeLat, alt-boxSizeF);
        writeCoord (lon+boxSizeLon, lat+boxSizeLat, alt-boxSizeF);
        writeCoord (lon+boxSizeLon, lat+boxSizeLat, alt+boxSizeF);
        writeCoord (lon-boxSizeLon, lat+boxSizeLat, alt+boxSizeF);
        writePolyBoxEnd();

        writePolyBoxHeader(startTime, endTime, style, name, description);
        writeCoord (lon-boxSizeLon, lat-boxSizeLat, alt-boxSizeF);
        writeCoord (lon+boxSizeLon, lat-boxSizeLat, alt-boxSizeF);
        writeCoord (lon+boxSizeLon, lat-boxSizeLat, alt+boxSizeF);
        writeCoord (lon-boxSizeLon, lat-boxSizeLat, alt+boxSizeF);
        writePolyBoxEnd();

        writePolyBoxHeader(startTime, endTime, style, name, description);
        writeCoord (lon+boxSizeLon, lat-boxSizeLat, alt-boxSizeF);
        writeCoord (lon+boxSizeLon, lat-boxSizeLat, alt+boxSizeF);
        writeCoord (lon+boxSizeLon, lat+boxSizeLat, alt+boxSizeF);
        writeCoord (lon+boxSizeLon, lat+boxSizeLat, alt-boxSizeF);
        writePolyBoxEnd();

        writePolyBoxHeader(startTime, endTime, style, name, description);
        writeCoord (lon-boxSizeLon, lat-boxSizeLat, alt-boxSizeF);
        writeCoord (lon-boxSizeLon, lat-boxSizeLat, alt+boxSizeF);
        writeCoord (lon-boxSizeLon, lat+boxSizeLat, alt+boxSizeF);
        writeCoord (lon-boxSizeLon, lat+boxSizeLat, alt-boxSizeF);
        writePolyBoxEnd();
    }

    private void writePolyBoxHeader(String startTime, String endTime, String style, String name, String description) throws IOException
    {
        output.writeBytes (tab3 + "<Placemark>\r\n");
        if (name != null && name.length() > 0)
            writeName (tab4, name);
        if (description != null && description.length() > 0)
            writeDescription (tab4, description);
        output.writeBytes (tab4 + "<TimeSpan>\r\n");
        output.writeBytes (tab5 + "<begin>" + startTime + "</begin>\r\n");
        output.writeBytes (tab5 + "<end>" + endTime + "</end>\r\n");
        output.writeBytes (tab4 + "</TimeSpan>\r\n");
        output.writeBytes (tab4 + "<styleUrl>#" + style + "</styleUrl>\r\n");
        output.writeBytes (tab4 + "<Polygon>\r\n");
        output.writeBytes (tab5 + "<altitudeMode>absolute</altitudeMode>\r\n");
        output.writeBytes (tab5 + "<outerBoundaryIs>\r\n");
        output.writeBytes (tab6 + "<LinearRing>\r\n");
        output.writeBytes (tab7 + "<coordinates>\r\n");

    }

    private void writePolyBoxEnd() throws IOException
    {
        output.writeBytes (tab7 + "</coordinates>\r\n");
        output.writeBytes (tab6 + "</LinearRing>\r\n");
        output.writeBytes (tab5 + "</outerBoundaryIs>\r\n");
        output.writeBytes (tab4 + "</Polygon>\r\n");
        output.writeBytes (tab3 + "</Placemark>\r\n");
    }

    private void writeCoord (double lon, double lat, double alt) throws IOException
    {
        output.writeBytes (tab8 + lon + "," + lat + "," + alt + "\r\n");
    }

    public void writePathLine (long startTimeMillis, long endTimeMillis, double currLat, double currLon, double currAlt, double lastLat, double lastLon, double lastAlt) throws IOException
    {
        DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
        //String startTime = formatter.format(new Date(startTimeMillis)) + "Z";
        String startTime = formatter.format(new Date(startTimeMillis)) + "-04:00";
        //String endTime = formatter.format(new Date(endTimeMillis)) + "Z";
        String endTime = formatter.format(new Date(endTimeMillis)) + "-04:00";

        writePathLineHeader(startTime, endTime);
        writePathLineCoord (currLon, currLat, currAlt, lastLon, lastLat, lastAlt);
        writePathLineEnd();
    }

    public void writePathLineHeader(String startTime, String endTime) throws IOException
    {
        output.writeBytes (tab3 + "<Placemark>\r\n");
        output.writeBytes (tab4 + "<TimeSpan>\r\n");
        output.writeBytes (tab5 + "<begin>" + startTime + "</begin>\r\n");
        output.writeBytes (tab5 + "<end>" + endTime + "</end>\r\n");
        output.writeBytes (tab4 + "</TimeSpan>\r\n");
        output.writeBytes (tab4 + "<styleUrl>#" + pathStyle + "</styleUrl>\r\n");
        output.writeBytes (tab4 + "<LineString>\r\n");
        output.writeBytes (tab5 + "<altitudeMode>absolute</altitudeMode>\r\n");
        output.writeBytes (tab7 + "<coordinates>\r\n");
    }

    public void writePathLineCoord (double currLon, double currLat, double currAlt, double lastLon, double lastLat, double lastAlt) throws IOException
    {
        writeCoord(currLon, currLat, currAlt);
        writeCoord(lastLon, lastLat, lastAlt);
    }

    public void writePathLineEnd() throws IOException
    {
        output.writeBytes (tab7 + "</coordinates>\r\n");
        output.writeBytes (tab4 + "</LineString>\r\n");
        output.writeBytes (tab3 + "</Placemark>\r\n");
    }
}
