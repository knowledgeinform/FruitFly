/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.jhuapl.nstd.swarm.display;

import edu.jhuapl.nstd.swarm.Updateable;
import edu.jhuapl.nstd.swarm.belief.BeliefManager;
import edu.jhuapl.nstd.swarm.belief.SensorSummaryBelief;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.GridBagLayout;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.border.LineBorder;

/**
 *
 * @author humphjc1
 */
public class SensorSummaryStopLightPanel extends javax.swing.JPanel implements Updateable
{
    BeliefManager m_BeliefManager;
    long lastUpdateTimeMs = 0;
    
    SensorSummarySingleStopLight m_ChemicalSensorSummaryStopLight;
    SensorSummarySingleStopLight m_BiologicalSensorSummaryStopLight;
    SensorSummarySingleStopLight m_RadNucSensorSummaryStopLight;
    SensorSummarySingleStopLight m_CloudSensorSummaryStopLight;
    
    public static void main (String args[])
    {
        JFrame frame = new JFrame ();
        frame.setSize (500,300);
        frame.setLayout (new BorderLayout());
        frame.add (new SensorSummaryStopLightPanel(null));
        frame.setVisible (true);
    }

    /**
     * Creates new form SensorSummaryStopLightPanel
     */
    public SensorSummaryStopLightPanel(BeliefManager belMgr) 
    {
        initComponents();
        m_BeliefManager = belMgr;
        this.setLayout(new BoxLayout(this, BoxLayout.X_AXIS));
        
        m_CloudSensorSummaryStopLight = new SensorSummarySingleStopLight("PLUME");
        m_CloudSensorSummaryStopLight.setBorder(new LineBorder(Color.BLACK, 3));
        this.add(m_CloudSensorSummaryStopLight);
        m_CloudSensorSummaryStopLight.setVisible(true);
        
        this.add(Box.createRigidArea(new Dimension(10, 1)));
        
        m_ChemicalSensorSummaryStopLight = new SensorSummarySingleStopLight("CHEM");
        this.add(m_ChemicalSensorSummaryStopLight);
        m_ChemicalSensorSummaryStopLight.setVisible(true);
        
        m_BiologicalSensorSummaryStopLight = new SensorSummarySingleStopLight("BIO");
        this.add(m_BiologicalSensorSummaryStopLight);
        m_BiologicalSensorSummaryStopLight.setVisible(true);
        
        m_RadNucSensorSummaryStopLight = new SensorSummarySingleStopLight("R/N");
        this.add(m_RadNucSensorSummaryStopLight);
        m_RadNucSensorSummaryStopLight.setVisible(true);
    }
    
    @Override
    public void update()
    {
        SensorSummaryBelief sensorSummary = (SensorSummaryBelief)m_BeliefManager.get(SensorSummaryBelief.BELIEF_NAME);
        if (sensorSummary != null && sensorSummary.getTimeStamp().getTime() > lastUpdateTimeMs)
        {
            m_ChemicalSensorSummaryStopLight.update (sensorSummary.getChemicalSummary());
            m_BiologicalSensorSummaryStopLight.update (sensorSummary.getBiologicalSummary());
            m_RadNucSensorSummaryStopLight.update (sensorSummary.getRadNucSummary());
            m_CloudSensorSummaryStopLight.update (sensorSummary.getCloudSummary());
            lastUpdateTimeMs = sensorSummary.getTimeStamp().getTime();
        }
        else
        {
            m_ChemicalSensorSummaryStopLight.update ();
            m_BiologicalSensorSummaryStopLight.update ();
            m_RadNucSensorSummaryStopLight.update ();
            m_CloudSensorSummaryStopLight.update ();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setMinimumSize(new java.awt.Dimension(220, 100));
        setPreferredSize(new java.awt.Dimension(220, 100));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 227, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
