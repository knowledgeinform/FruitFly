/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.jhuapl.nstd.swarm.display;

import edu.jhuapl.nstd.swarm.MissionErrorManager;
import edu.jhuapl.nstd.swarm.Updateable;
import edu.jhuapl.nstd.swarm.WACSAgent;
import edu.jhuapl.nstd.swarm.WACSDisplayAgent;
import edu.jhuapl.nstd.swarm.belief.BeliefManager;
import edu.jhuapl.nstd.swarm.belief.ConfigProperty;
import edu.jhuapl.nstd.swarm.belief.EnableAutopilotControlActualBelief;
import edu.jhuapl.nstd.swarm.belief.EnableAutopilotControlCommandedBelief;
import java.awt.Color;
import java.util.Date;

/**
 *
 * @author humphjc1
 */
public class UavAutopilotPanel extends javax.swing.JPanel implements Updateable, MissionErrorManager.CommandedBeliefErrorListener
{
    BeliefManager m_BeliefManager;
    
    private Date m_LastCommandedEnableAutopilotControlTime;
    private Date m_LastActualEnableAutopilotControlTime;

    /**
     * Creates new form UavAutopilotPanel
     */
    public UavAutopilotPanel(BeliefManager belMgr)
    {
        initComponents();
        
        m_BeliefManager = belMgr;
        jToggleButton1ActionPerformed (null);
        
        MissionErrorManager.getInstance().registerErrorListener(this);
        
    }
    
    public void update ()
    {
        EnableAutopilotControlCommandedBelief enableControlCommandBelief = (EnableAutopilotControlCommandedBelief)m_BeliefManager.get(EnableAutopilotControlCommandedBelief.BELIEF_NAME);
        if (enableControlCommandBelief != null && (m_LastCommandedEnableAutopilotControlTime == null || enableControlCommandBelief.getTimeStamp().after(m_LastCommandedEnableAutopilotControlTime)))
        {
            jToggleButton1.setSelected(!enableControlCommandBelief.getAllow());
            m_LastCommandedEnableAutopilotControlTime = enableControlCommandBelief.getTimeStamp();
        }
        
        EnableAutopilotControlActualBelief enableControlActualBelief = (EnableAutopilotControlActualBelief)m_BeliefManager.get(EnableAutopilotControlActualBelief.BELIEF_NAME);
        if (enableControlActualBelief != null && (m_LastActualEnableAutopilotControlTime == null || enableControlActualBelief.getTimeStamp().after(m_LastActualEnableAutopilotControlTime)))
        {
            if (enableControlActualBelief.getAllow())
            {
                jLabel2.setText("YES");
            }
            else
            {
                jLabel2.setText("NO");
            }
            m_LastActualEnableAutopilotControlTime = enableControlActualBelief.getTimeStamp();
        }
    }
    
    @Override
    public void handleCommandedBeliefError(MissionErrorManager.ErrorCodeBase errorCode, int alarmLevel) 
    {
        if (errorCode == MissionErrorManager.COMMANDACTUALSYNC_ENABLEAUTOPILOTCONTROL_ERRORCODE)
        {
            if (alarmLevel == MissionErrorManager.ALARMLEVEL_ERROR)
                jLabel2.setBackground(Color.RED);
            else if (alarmLevel == MissionErrorManager.ALARMLEVEL_WARNING)
                jLabel2.setBackground(Color.ORANGE);
            else 
                jLabel2.setBackground(Color.GREEN);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jToggleButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jToggleButton1.setText("STOP UAS AUTOPILOT CONTROL");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("CONTROL ALLOWED?");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("UNKNOWN");
        jLabel2.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        EnableAutopilotControlCommandedBelief enableBelief = new EnableAutopilotControlCommandedBelief (WACSAgent.AGENTNAME, !jToggleButton1.isSelected());
        m_BeliefManager.put(enableBelief);
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables

}
