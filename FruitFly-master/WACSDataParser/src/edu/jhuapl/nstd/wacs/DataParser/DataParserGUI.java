/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DataParserGUI.java
 *
 * Created on Sep 28, 2010, 10:51:10 AM
 */

package edu.jhuapl.nstd.wacs.DataParser;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;

/**
 *
 * @author humphjc1
 */
public class DataParserGUI extends javax.swing.JFrame {

    boolean useMetricsFile = false;
    String metricsFilename = "";
    boolean useBladewerxResultsFile = false;
    String bladewerxResultsFilename = "";
    boolean useBladewerxRawFile = false;
    String bladewerxRawFilename = "";
    boolean useBridgeportResultsFile = false;
    String bridgeportResultsFilename = "";
    boolean useBridgeportRawFile = false;
    String bridgeportRawFilename = "";
    boolean useTrackerFile = false;
    String trackerFilename = "";
    boolean useCollectorFile = false;
    String collectorFilename = "";
    boolean usePiccoloFile = false;
    String piccoloFilename = "";
    boolean useShadowFile = false;
    String shadowFilename = "";
    String outputFolder = "";


    /** Creates new form DataParserGUI */
    public DataParserGUI() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton6 = new javax.swing.JButton();
        jTextField6 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jButton8 = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();
        jCheckBox6 = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();
        jCheckBox7 = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jButton11 = new javax.swing.JButton();
        jTextField10 = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jCheckBox8 = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jCheckBox9 = new javax.swing.JCheckBox();
        jButton13 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WACS Data Parser");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel1.setText("File Selection");

        jLabel2.setText("Metrics File:");

        jLabel3.setText("Bladewerx Results File:");

        jLabel4.setText("Bridgeport Results File:");

        jLabel5.setText("Collector Pod xD File:");

        jLabel6.setText("Tracker Pod xD File:");

        jLabel7.setText("Output Folder:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton2.setText("...");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("...");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("...");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("...");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("...");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 24));
        jButton7.setText("Process");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jButton8.setText("...");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jLabel9.setText("Bladewerx Raw File:");

        jButton9.setText("...");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel10.setText("Bridgeport Raw File:");

        jLabel11.setText("Log Files Root Folder:");

        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        jButton10.setText("Find Files");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("...");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("...");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel12.setText("Dakota Piccolo File:");

        jButton13.setText("...");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel13.setText("Shadow Commands File:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11))
                        .addGap(25, 25, 25))
                    .addComponent(jLabel1)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCheckBox6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jCheckBox3)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jCheckBox7)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jCheckBox2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jCheckBox1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jCheckBox9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jCheckBox8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jCheckBox5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7))
                        .addGap(16, 16, 16))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10)
                    .addComponent(jButton11))
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1))
                    .addComponent(jCheckBox1))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton8))
                    .addComponent(jCheckBox6))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2))
                    .addComponent(jCheckBox2))
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton9))
                    .addComponent(jCheckBox7))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3))
                    .addComponent(jCheckBox3))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4))
                    .addComponent(jCheckBox4))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5))
                    .addComponent(jCheckBox5))
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton12))
                    .addComponent(jCheckBox8))
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton13))
                    .addComponent(jCheckBox9))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // Process button
        metricsFilename = "";
        bladewerxResultsFilename = "";
        bladewerxRawFilename = "";
        bridgeportResultsFilename = "";
        bridgeportRawFilename = "";
        trackerFilename = "";
        collectorFilename = "";
        piccoloFilename = "";
        shadowFilename = "";

        
        useMetricsFile = jCheckBox1.isSelected();
        if (useMetricsFile)
        {
            metricsFilename = jTextField1.getText();
            File testFile = new File (metricsFilename);
            if (!testFile.exists())
            {
                jLabel8.setText ("Metrics file not found!");
                return;
            }
        }

        useBladewerxResultsFile = jCheckBox2.isSelected();
        if (useBladewerxResultsFile)
        {
            bladewerxResultsFilename = jTextField2.getText();
            File testFile = new File (bladewerxResultsFilename);
            if (!testFile.exists())
            {
                jLabel8.setText ("Bladewerx results file not found!");
                return;
            }
        }

        useBladewerxRawFile = jCheckBox6.isSelected();
        if (useBladewerxRawFile)
        {
            bladewerxRawFilename = jTextField7.getText();
            File testFile = new File (bladewerxRawFilename);
            if (!testFile.exists())
            {
                jLabel8.setText ("Bladewerx raw file not found!");
                return;
            }
        }

        useBridgeportResultsFile = jCheckBox3.isSelected();
        if (useBridgeportResultsFile)
        {
            bridgeportResultsFilename = jTextField3.getText();
            File testFile = new File (bridgeportResultsFilename);
            if (!testFile.exists())
            {
                jLabel8.setText ("Bridgeport results file not found!");
                return;
            }
        }

        useBridgeportRawFile = jCheckBox7.isSelected();
        if (useBridgeportRawFile)
        {
            bridgeportRawFilename = jTextField8.getText();
            File testFile = new File (bridgeportRawFilename);
            if (!testFile.exists())
            {
                jLabel8.setText ("Bridgeport raw file not found!");
                return;
            }
        }

        useTrackerFile = jCheckBox5.isSelected();
        if (useTrackerFile)
        {
            trackerFilename = jTextField5.getText();
            File testFile = new File (trackerFilename);
            if (!testFile.exists())
            {
                jLabel8.setText ("Tracker file not found!");
                return;
            }
        }

        useCollectorFile = jCheckBox4.isSelected();
        if (useCollectorFile)
        {
            collectorFilename = jTextField4.getText();
            File testFile = new File (collectorFilename);
            if (!testFile.exists())
            {
                jLabel8.setText ("Collector file not found!");
                return;
            }
        }

        usePiccoloFile = jCheckBox8.isSelected();
        if (usePiccoloFile)
        {
            piccoloFilename = jTextField10.getText();
            File testFile = new File (piccoloFilename);
            if (!testFile.exists())
            {
                jLabel8.setText ("Piccolo file not found!");
                return;
            }
        }

        useShadowFile = jCheckBox9.isSelected();
        if (useShadowFile)
        {
            shadowFilename = jTextField11.getText();
            File testFile = new File (shadowFilename);
            if (!testFile.exists())
            {
                jLabel8.setText ("Shadow file not found!");
                return;
            }
        }



        outputFolder = jTextField6.getText();
        File testFolder = new File (outputFolder);
        if (!testFolder.exists())
            testFolder.mkdir();


        try
        {
            DataParser.process (useMetricsFile?metricsFilename:null, useBladewerxRawFile?bladewerxRawFilename:null, useBladewerxResultsFile?bladewerxResultsFilename:null, useBridgeportRawFile?bridgeportRawFilename:null, useBridgeportResultsFile?bridgeportResultsFilename:null, useTrackerFile?trackerFilename:null, useCollectorFile?collectorFilename:null, usePiccoloFile?piccoloFilename:null, useShadowFile?shadowFilename:null, outputFolder);
            jLabel8.setText ("Success!");
        }
        catch (HumpsException e)
        {
            jLabel8.setText (e.what);
        }

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:

        //Force metrics file to be used
        /*String testString = jTextField1.getText();
        jCheckBox1.setSelected(!testString.isEmpty());*/

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
        String testString = jTextField2.getText();
        jCheckBox2.setSelected(!testString.isEmpty());
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        String rootFolderName = jTextField9.getText();
        File rootFolder = new File (rootFolderName);
        if (!rootFolder.exists())
        {
            jLabel8.setText ("Could not open root folder to find files!");
            return;
        }

        File newOutputFolder = new File (rootFolderName + "\\Output Files");
        if (!newOutputFolder.exists())
        {
            newOutputFolder.mkdir();
        }
        jTextField6.setText (newOutputFolder.getAbsolutePath());


        jTextField2.setText ("");
        jCheckBox2.setSelected(false);
        jTextField7.setText ("");
        jCheckBox6.setSelected(false);
          jTextField3.setText ("");
        jCheckBox3.setSelected(false);
        jTextField8.setText ("");
        jCheckBox7.setSelected(false);
          jTextField1.setText ("");
        jCheckBox1.setSelected(false);
        jTextField4.setText ("");
        jCheckBox4.setSelected(false);
        jTextField5.setText ("");
        jCheckBox5.setSelected(false);
        jTextField10.setText ("");
        jCheckBox8.setSelected(false);


        String alphaFolderName = null;
        String gammaFolderName = null;
        String metricsFolderName = null;
        String collFolderName = null;
        String trackFolderName = null;
        String piccoloFolderName = null;
        String shadowFolderName = null;
        String[] childFolders = rootFolder.list();

        for (int i = 0; i < childFolders.length; i ++)
        {
            if (childFolders[i].contains("Alpha") || childFolders[i].contains("alpha"))
                alphaFolderName = rootFolderName + "\\" + childFolders[i];
            else if(childFolders[i].contains("Gamma") || childFolders[i].contains("gamma"))
                gammaFolderName = rootFolderName + "\\" + childFolders[i];
            else if(childFolders[i].contains("metrics") || childFolders[i].contains("Metrics"))
                metricsFolderName = rootFolderName + "\\" + childFolders[i];
            else if((childFolders[i].contains("coll") || childFolders[i].contains("Coll")) && (childFolders[i].contains("XD") || childFolders[i].contains("xD") || childFolders[i].contains("xd")))
                collFolderName = rootFolderName + "\\" + childFolders[i];
            else if((childFolders[i].contains("track") || childFolders[i].contains("Track")) && (childFolders[i].contains("XD") || childFolders[i].contains("xD") || childFolders[i].contains("xd")))
                trackFolderName = rootFolderName + "\\" + childFolders[i];
            //else if(childFolders[i].contains("Piccolo") || childFolders[i].contains("piccolo"))
            //    piccoloFolderName = rootFolderName + "\\" + childFolders[i];
            else if(childFolders[i].contains("Shadow") || childFolders[i].contains("shadow"))
                shadowFolderName = rootFolderName + "\\" + childFolders[i];

        }

        if (alphaFolderName != null)
        {
            String fittedFolder = null;
            String rawFolder = null;
            int lowestFittedIndex = Integer.MAX_VALUE;
            int lowestRawIndex = Integer.MAX_VALUE;

            File alphaFolder = new File (alphaFolderName);
            childFolders = alphaFolder.list();
            for (int i = 0; i < childFolders.length; i ++)
            {
                if (childFolders[i].contains ("Fitted"))
                {
                    try
                    {
                        int index = Integer.parseInt (childFolders[i].substring (childFolders[i].lastIndexOf ("_")+1, childFolders[i].lastIndexOf(".")));
                        if (index < lowestFittedIndex)
                        {
                            lowestFittedIndex = index;
                            fittedFolder = childFolders[i];
                        }
                    }
                    catch (Exception e)
                    {
                        jLabel8.setText ("Could not parse file indexes for file locator!");
                        return;
                    }
                }
                if (childFolders[i].contains ("Raw"))
                {
                    try
                    {
                        int index = Integer.parseInt (childFolders[i].substring (childFolders[i].lastIndexOf ("_")+1, childFolders[i].lastIndexOf(".")));
                        if (index < lowestRawIndex)
                        {
                            lowestRawIndex = index;
                            rawFolder = childFolders[i];
                        }
                    }
                    catch (Exception e)
                    {
                        jLabel8.setText ("Could not parse file indexes for file locator!");
                        return;
                    }
                }
            }


            if (fittedFolder != null)
            {
                jTextField2.setText (alphaFolderName + "\\" + fittedFolder);
                jCheckBox2.setSelected(true);
            }
            if (rawFolder != null)
            {
                jTextField7.setText (alphaFolderName + "\\" + rawFolder);
                jCheckBox6.setSelected(true);
            }
        }

        if (gammaFolderName != null)
        {
            String fittedFolder = null;
            String rawFolder = null;
            int lowestFittedIndex = Integer.MAX_VALUE;
            int lowestRawIndex = Integer.MAX_VALUE;

            File gammaFolder = new File (gammaFolderName);
            childFolders = gammaFolder.list();
            for (int i = 0; i < childFolders.length; i ++)
            {
                if (childFolders[i].contains ("Fitted"))
                {
                    try
                    {
                        int index = Integer.parseInt (childFolders[i].substring (childFolders[i].lastIndexOf ("_")+1, childFolders[i].lastIndexOf(".")));
                        if (index < lowestFittedIndex)
                        {
                            lowestFittedIndex = index;
                            fittedFolder = childFolders[i];
                        }
                    }
                    catch (Exception e)
                    {
                        jLabel8.setText ("Could not parse file indexes for file locator!");
                        return;
                    }
                }
                if (childFolders[i].contains ("Raw") && childFolders[i].endsWith(".flt"))
                {
                    try
                    {
                        int index = Integer.parseInt (childFolders[i].substring (childFolders[i].lastIndexOf ("_")+1, childFolders[i].lastIndexOf(".")));
                        if (index < lowestRawIndex)
                        {
                            lowestRawIndex = index;
                            rawFolder = childFolders[i];
                        }
                    }
                    catch (Exception e)
                    {
                        jLabel8.setText ("Could not parse file indexes for file locator!");
                        return;
                    }
                }
            }


            if (fittedFolder != null)
            {
                jTextField3.setText (gammaFolderName + "\\" + fittedFolder);
                jCheckBox3.setSelected(true);
            }
            if (rawFolder != null)
            {
                jTextField8.setText (gammaFolderName + "\\" + rawFolder);
                jCheckBox7.setSelected(true);
            }
        }

        if (metricsFolderName != null)
        {
            String rawFolder = null;

            File metricsFolder = new File (metricsFolderName);
            childFolders = metricsFolder.list();
            for (int i = 0; i < childFolders.length; i ++)
            {
                if (childFolders[i].contains ("wacsagent"))
                {
                    rawFolder = childFolders[i];
                }
            }

            if (rawFolder != null)
            {
                jTextField1.setText (metricsFolderName + "\\" + rawFolder);
                jCheckBox1.setSelected(true);
            }
        }

        if (collFolderName != null)
        {
            String rawFolder = null;

            File folder = new File (collFolderName);
            childFolders = folder.list();
            for (int i = 0; i < childFolders.length; i ++)
            {
                if (childFolders[i].contains (".LOG"))
                {
                    rawFolder = childFolders[i];
                }
            }

            if (rawFolder != null)
            {
                jTextField4.setText (collFolderName + "\\" + rawFolder);
                jCheckBox4.setSelected(true);
            }
        }

        if (trackFolderName != null)
        {
            String rawFolder = null;

            File folder = new File (trackFolderName);
            childFolders = folder.list();
            for (int i = 0; i < childFolders.length; i ++)
            {
                if (childFolders[i].contains (".LOG"))
                {
                    rawFolder = childFolders[i];
                }
            }

            if (rawFolder != null)
            {
                jTextField5.setText (trackFolderName + "\\" + rawFolder);
                jCheckBox5.setSelected(true);
            }
        }

        if (piccoloFolderName != null)
        {
            String rawFolder = null;

            File folder = new File (piccoloFolderName);
            childFolders = folder.list();
            for (int i = 0; i < childFolders.length; i ++)
            {
                if (childFolders[i].contains ("Piccolo"))
                {
                    rawFolder = childFolders[i];
                }
            }

            if (rawFolder != null)
            {
                jTextField10.setText (piccoloFolderName + "\\" + rawFolder);
                jCheckBox8.setSelected(true);
            }
        }

        if (shadowFolderName != null)
        {
            String rawFolder = null;

            File folder = new File (shadowFolderName);
            childFolders = folder.list();
            for (int i = 0; i < childFolders.length; i ++)
            {
                if (childFolders[i].contains (".csv"))
                {
                    rawFolder = childFolders[i];
                }
            }

            if (rawFolder != null)
            {
                jTextField11.setText (shadowFolderName + "\\" + rawFolder);
                jCheckBox9.setSelected(true);
            }
        }


    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        String newText = getFolder();
        if (newText != null && !newText.isEmpty())
            jTextField9.setText(newText);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String newText = getFile();
        if (newText != null && !newText.isEmpty())
            jTextField1.setText (newText);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        String newText = getFile();
        if (newText != null && !newText.isEmpty())
            jTextField7.setText (newText);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String newText = getFile();
        if (newText != null && !newText.isEmpty())
            jTextField2.setText (newText);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        String newText = getFile();
        if (newText != null && !newText.isEmpty())
            jTextField8.setText (newText);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String newText = getFile();
        if (newText != null && !newText.isEmpty())
            jTextField3.setText (newText);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String newText = getFile();
        if (newText != null && !newText.isEmpty())
            jTextField4.setText (newText);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String newText = getFile();
        if (newText != null && !newText.isEmpty())
            jTextField5.setText (newText);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String newText = getFolder();
        if (newText != null && !newText.isEmpty())
            jTextField6.setText (newText);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        String newText = getFile();
        if (newText != null && !newText.isEmpty())
            jTextField10.setText (newText);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        String newText = getFile();
        if (newText != null && !newText.isEmpty())
            jTextField11.setText (newText);
    }//GEN-LAST:event_jButton13ActionPerformed

    private String getFolder ()
    {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            return fileChooser.getSelectedFile().getAbsolutePath();
        }
        else
            return "";
    }

    private String getFile ()
    {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            return fileChooser.getSelectedFile().getAbsolutePath();
        }
        else
            return "";
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataParserGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

}
